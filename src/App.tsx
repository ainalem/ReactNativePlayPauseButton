import React, {useState} from 'react';
import {
  StyleSheet,
  View,
  Animated,
  Pressable,
  Easing,
  Text,
} from 'react-native';
import {Svg, Path, Circle} from 'react-native-svg';

const AnimatedSvg = Animated.createAnimatedComponent(Svg);
const AnimatedPath = Animated.createAnimatedComponent(Path);

function getInitialState() {
  const anim = new Animated.Value(0);
  const rotateInterpolation = anim.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '90deg'],
  });
  const partInterpolation1 = anim.interpolate({
    inputRange: [0, 1],
    outputRange: [
      'M 37.507428,62.224555 37.511661,61.433069 37.513209,60.677507 37.512881,59.97932 37.511271,59.359965 37.508968,58.840891 37.506589,58.443564 37.50472,58.189417 37.503965,58.099959 37.504423,57.548865 37.504881,56.997771 37.505338,56.446677 37.505796,55.895583 37.506245,55.344489 37.506704,54.793395 37.507162,54.242301 37.507618,53.691207 37.507162,53.140104 37.506704,52.58901 37.506245,52.037906 37.505796,51.486821 37.505338,50.935727 37.504881,50.384625 37.504423,49.833531 37.503965,49.282446 38.945697,49.282717 40.387436,49.283005 41.829176,49.283285 43.270907,49.283574 44.712646,49.283853 46.154379,49.284133 47.596117,49.284421 49.037859,49.284701 51.63252,49.284421 54.227178,49.284133 56.821846,49.283853 59.416513,49.283574 62.011162,49.283285 64.605829,49.283005 67.200488,49.282717 69.795155,49.282446 69.636896,50.102264 69.113952,50.904465 68.154158,51.764393 66.685283,52.757398 64.635152,53.95883 61.931563,55.444066 58.502295,57.288413 54.275172,59.567255 50.092523,61.851672 46.770947,63.687946 44.199577,65.114194 42.267533,66.168505 40.863954,66.888971 39.877982,67.313735 39.198743,67.480861 38.715385,67.428475 38.274443,67.155205 37.953823,66.714296 37.734813,66.135701 37.59865,65.449311 37.526593,64.685082 37.500077,63.872931 37.5,63.042759 Z',
      'M 64.551731,65.496722 61.261197,65.496429 57.002957,65.496162 52.210513,65.495896 47.317344,65.495667 42.756957,65.495464 38.962825,65.495309 36.368453,65.495207 35.407336,65.49518 34.601274,65.5 33.952203,65.493435 33.444867,65.443937 33.063999,65.320314 32.794334,65.091175 32.620597,64.725201 32.527551,64.19101 32.5,63.457272 32.500267,62.588177 32.500977,61.678986 32.501983,60.744829 32.50313,59.800876 32.504279,58.862229 32.505284,57.944068 32.505993,57.061522 32.506261,56.229714 32.566915,55.543392 32.740152,55.063518 33.012904,54.754663 33.37211,54.581424 33.804657,54.5083 34.297478,54.5 34.837489,54.521026 35.411601,54.535901 36.999682,54.536038 40.316036,54.536406 44.786101,54.536882 49.835334,54.537453 54.889167,54.538012 59.373026,54.538518 62.712384,54.538874 64.332674,54.539004 64.904566,54.534192 65.467944,54.537259 66.001885,54.575363 66.485551,54.67515 66.898061,54.863632 67.218555,55.167657 67.426158,55.6142 67.5,56.230082 67.499894,57.059474 67.499571,58.08094 67.499134,59.223089 67.498644,60.414554 67.498144,61.583955 67.497715,62.659914 67.497401,63.571024 67.497287,64.245936 67.49495,64.299722 67.462812,64.441524 67.363754,64.641969 67.160167,64.87176 66.814612,65.101515 66.289639,65.301905 65.547813,65.443606 Z',
    ],
  });
  const partInterpolation2 = anim.interpolate({
    inputRange: [0, 1],
    outputRange: [
      'M 37.507428,37.776311 37.511661,38.567791 37.513209,39.32335 37.512881,40.02154 37.511271,40.640901 37.508968,41.159963 37.506589,41.5573 37.50472,41.811437 37.503965,41.900905 37.504423,42.451996 37.504881,43.003088 37.505338,43.554189 37.505796,44.105281 37.506245,44.656373 37.506704,45.207473 37.507162,45.758564 37.507618,46.309664 37.507162,46.860757 37.506704,47.41185 37.506245,47.962948 37.505796,48.514041 37.505338,49.065135 37.504881,49.616238 37.504423,50.167323 37.503965,50.718416 38.945697,50.718145 40.387436,50.717857 41.829176,50.717577 43.270907,50.717289 44.712646,50.717018 46.154379,50.71672 47.596117,50.71645 49.037859,50.716161 51.63252,50.71645 54.227178,50.71672 56.821846,50.717018 59.416513,50.717289 62.011162,50.717577 64.605829,50.717857 67.200488,50.718145 69.795155,50.718416 69.636896,49.898599 69.113952,49.096397 68.154158,48.23647 66.685283,47.243459 64.635152,46.042022 61.931563,44.556799 58.502295,42.712447 54.275172,40.43361 50.092523,38.149191 46.770947,36.312907 44.199577,34.886669 42.267533,33.832368 40.863954,33.111891 39.877982,32.687132 39.198743,32.52 38.715385,32.57238 38.274443,32.845657 37.953823,33.286559 37.734813,33.865165 37.59865,34.551546 37.526593,35.315778 37.500077,36.127938 37.5,36.958103 Z',
      'M 64.551731,34.503277 61.261197,34.503565 57.002957,34.503842 52.210513,34.504105 47.317344,34.504337 42.756957,34.504534 38.962825,34.504688 36.368453,34.504784 35.407336,34.504819 34.601274,34.5 33.952203,34.506571 33.444867,34.556068 33.063999,34.67968 32.794334,34.908814 32.620597,35.274792 32.527551,35.808989 32.5,36.542739 32.500267,37.411821 32.500977,38.321008 32.501983,39.25516 32.50313,40.199123 32.504279,41.137759 32.505284,42.055924 32.505993,42.938479 32.506261,43.770271 32.566915,44.456596 32.740152,44.936475 33.012904,45.245327 33.37211,45.418572 33.804657,45.491682 34.297478,45.5 34.837489,45.478973 35.411601,45.464083 36.999682,45.463953 40.316036,45.463597 44.786101,45.463101 49.835334,45.462535 54.889167,45.461961 59.373026,45.461467 62.712384,45.461111 64.332674,45.460979 64.904566,45.465805 65.467944,45.462736 66.001885,45.42463 66.485551,45.324843 66.898061,45.136362 67.218555,44.832326 67.426158,44.385789 67.5,43.769895 67.499894,42.940512 67.499571,41.919056 67.499134,40.776903 67.498644,39.585435 67.498144,38.416041 67.497715,37.340085 67.497401,36.428969 67.497287,35.754053 67.49495,35.700266 67.462812,35.55847 67.363754,35.358029 67.160167,35.12824 66.814612,34.898489 66.289639,34.698091 65.547813,34.556388 Z',
    ],
  });

  return {
    anim,
    rotateInterpolation,
    partInterpolation1,
    partInterpolation2,
  };
}

const easing = Easing.bezier(0.4, 0, 0.2, 1);

const App = () => {
  const [state] = useState(getInitialState());
  const [play, setPlay] = useState(true);

  const toggleAnimation = () => {
    const {anim} = state;
    Animated.timing(anim, {
      toValue: play ? 1 : 0,
      duration: 300,
      easing,
      useNativeDriver: false,
    }).start();
    setPlay(!play);
  };

  const {rotateInterpolation, partInterpolation1, partInterpolation2} = state;
  const rotateStyle = {
    transform: [{rotate: rotateInterpolation}],
  };

  return (
    <Pressable onPress={toggleAnimation}>
      <View style={styles.container}>
        <Text style={styles.title}>
          React Native{' '}
          <Text style={[styles.title, styles.titleLight]}>
            - Morphing play/pause button
          </Text>
        </Text>
        <AnimatedSvg
          width={100}
          height={100}
          viewBox="0 0 100 100"
          style={rotateStyle}>
          <Circle cx="50" cy="50" r="50" fill="red" />
          <AnimatedPath d={partInterpolation1} fill="#fff" />
          <AnimatedPath d={partInterpolation2} fill="#fff" />
        </AnimatedSvg>
      </View>
    </Pressable>
  );
};

export default App;

const styles = StyleSheet.create({
  container: {
    alignItems: 'center',
    backgroundColor: '#ecf0f1',
    justifyContent: 'center',
    height: '100%',
  },
  title: {
    color: '#282828',
    fontSize: 40,
    fontWeight: '800',
    paddingHorizontal: 20,
    paddingVertical: 60,
  },
  titleLight: {
    fontWeight: '500',
  },
});
